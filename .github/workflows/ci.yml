name: CI


on: 
  push:
    branches: [master, dev]


jobs:
  windows-build:
    runs-on: windows-latest
    strategy:
      matrix:
        configuration: [Debug, Release]

    steps:
    - uses: actions/checkout@v4
  
    - name: Enable NMake
      uses: ilammy/msvc-dev-cmd@v1.13.0

    - name: Build
      run: |
          mkdir build
          cd build
          cmake -DCMAKE_BUILD_TYPE=${{ matrix.configuration }} -G "NMake Makefiles" ..
          nmake install

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        path: build/install-dir
        name: ${{ matrix.configuration }}_Windows
  

  linux-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        configuration: [Debug, Release]

    steps:
    - uses: actions/checkout@v4
  
    - name: Build
      run: |
          mkdir build
          cd build
          cmake -DCMAKE_BUILD_TYPE=${{ matrix.configuration }} ..
          make install -j $(nproc)

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        path: build/install-dir
        name: ${{ matrix.configuration }}_Linux
        
  publish:
    runs-on: ubuntu-latest
    needs: [windows-build, linux-build]

    steps:
    - uses: actions/checkout@v4
  
    - uses: LazyPanda07/extract-current-branch@master
    
    - name: Setup release version variable
      shell: pwsh
      run: echo "VERSION=$($($($(Select-String -Path .\src\SocketStreamsUtility.cpp -Pattern version) -split '( = )')[3].TrimEnd(';')).Trim('\"'))" >> $Env:GITHUB_ENV

    - name: Download artifacts
      if: ${{ env.CURRENT_BRANCH == 'master' }}
      uses: actions/download-artifact@v4
      
    - name: Setup Windows build list
      run: echo "WINDOWS_BUILD_LIST="$(ls | grep Windows)"" >> ${GITHUB_ENV}
      
    - name: Create Windows zip
      if: ${{ env.CURRENT_BRANCH == 'master' }}
      run: zip -r windows.zip ${{ env.WINDOWS_BUILD_LIST }}

    - name: Create Linux zip
      if: ${{ env.CURRENT_BRANCH == 'master' }}
      run: zip -r linux.zip Release_Linux ReleaseDLL_Linux

    - name: Publish Windows
      if: ${{ env.CURRENT_BRANCH == 'master' }}
      uses: svenstaro/upload-release-action@master
      with:
        tag: v${{ env.VERSION }}
        file: windows.zip

    - name: Publish Linux
      if: ${{ env.CURRENT_BRANCH == 'master' }}
      uses: svenstaro/upload-release-action@master
      with:
        tag: v${{ env.VERSION }}
        file: linux.zip
